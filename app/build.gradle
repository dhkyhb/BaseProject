apply plugin: 'com.android.application'
apply plugin: 'bugly'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
//apply from: 'tinker-support.gradle'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"

bugly {
    debug = true
    appId = ""
    appKey = ""
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "znyoo.name.baseproject"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode VERSION_CODE as int
        versionName VERSION_NAME
        project.archivesBaseName = "Base"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi-v7a', 'x86', 'x86_64', 'mips', 'mips64', 'armeabi'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64', 'arm64-v8a',armeabi
            //armeabi­v7a
            //arm64­v8a
            //x86
            //x86_64
            //mips
            //mips64
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            applicationVariants.all { variant ->
                variant.getPackageApplication().outputScope.apkDatas.forEach { apkData ->
                    //android studio3.0之前的写法
                    //    output->output.outputFile=new File(output.outputFile.parent,output.outputFile.name.replace(".apk","-"+defaultConfig.versionName+".apk"))
                    //android studio3.0的写法
                    def filename = "${project.archivesBaseName}" +
                            "_${defaultConfig.versionName}" +
                            ".${versionCode}.apk"
                    apkData.outputFileName = filename
                }
            }
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main() {
            jniLibs.srcDirs = ['libs']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //bugly后台管理
    api 'com.tencent.bugly:crashreport_upgrade:latest.release'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0
    api 'com.tencent.bugly:nativecrashreport:latest.release'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    api 'com.tencent.tinker:tinker-android-lib:1.9.9'
    api "com.android.support:multidex:1.0.1" // 多dex配置

    api project(path: ':netlibrary')

    //    api "com.google.dagger:dagger-android-support:2.16"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
}
